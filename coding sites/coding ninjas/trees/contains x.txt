#include <iostream>
using namespace std;
#include <vector>
class TreeNode{
public:
	int data;
	vector <TreeNode*> children;
	TreeNode(int data){
		this->data = data;
	}
};

TreeNode* make_tree(){
//cout<<"Enter data:";
int data; cin>>data;
TreeNode* newtreenode = new TreeNode(data);
//cout<<"Enter childrens: ";
int n; cin>>n;
for(int i = 0 ; i<n; i++){
	newtreenode->children.push_back(make_tree()); 
}
return newtreenode;
}
void print_tree(TreeNode* treenode){


//print self data
	cout<<treenode->data<<" : ";
// then thier children's data
	for(int i = 0 ; i<treenode->children.size() ; i++){
		cout<<treenode->children[i]->data<<" , ";
	}
	cout<<endl;
	for(int i = 0 ;i<treenode->children.size() ; i++){
		print_tree(treenode->children[i]);
	}

}
bool contain_x(TreeNode* root_node , int target){
	if(root_node->data == target)
		return true;
	for(int i = 0 ; i<root_node->children.size() ; i++){
		if(contain_x(root_node->children[i], target))
			return true;
	}
	return false;
}

int main(){
	
TreeNode* tree = make_tree();
int target; cin>>target;
cout<<contain_x(tree , target);
}

